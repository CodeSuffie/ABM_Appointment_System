@page "/"
@using Database
@using Database.Models
@using Services.ModelServices
@inject IJSRuntime JSRuntime;
@inject ModelService ModelService;

@inject ModelDbContext ModelDbContext;

<div class="d-flex flex-column h-100">
    <nav class="navbar d-flex flex-row bg-body-tertiary">
        <form class="container-fluid justify-content-start">
            <button class="@GetPlayPauseButtonClass()" type="button" @onclick="OnPlayPauseButtonClicked">
                <i class="@GetPlayPauseButtonIconClass()"></i>
            </button>
        </form>
    </nav>
    
    <div class="d-flex flex-fill" style="flex-direction: row-reverse;">
        @if (_sidebarVisible)
        {
            <div class="d-flex flex-column p-1" style="width: 350px">
                <div class="d-flex flex-row">
                    <div class="ms-auto">
                        <button type="button" class="btn-close" aria-label="Close" @onclick="CloseSidebarAsync"></button>
                    </div>
                </div>
                <div class="d-flex flex-row flex-fill">
                    @if (_selectedTruck != null)
                    {
                        var trip = _selectedTruck.Trip;
                        
                        <div class="d-flex flex-column flex-fill">
                            <h1>Truck #@_selectedTruck.Id</h1>

                            <table class="table">
                                <tbody>
                                
                                @if (trip != null)
                                {
                                    <tr>
                                        <th scope="row" style="width: 150px">Location</th>
                                        <td>X: @trip.XLocation, Y: @trip.YLocation</td>
                                    </tr>
                                }

                                <tr>
                                    <th scope="row" style="width: 150px">Speed</th>
                                    <td>@_selectedTruck.Speed</td>
                                </tr>

                                <tr>
                                    <th scope="row" style="width: 150px">Capacity</th>
                                    <td>@_selectedTruck.Capacity</td>
                                </tr>

                                <tr>
                                    <th scope="row" style="width: 150px">Inventory</th>
                                    <td>@(string.Join(", ", _selectedTruck.Inventory.Select(x => x.Id)))</td>
                                </tr>
                        
                                </tbody>
                            </table>

                            @if (trip != null)
                            {
                                @foreach (var load in trip.Loads)
                                {
                                    <table class="table">
                                        <thead>
                                        <tr>
                                            <th scope="row" style="width: 150px">Load</th>
                                            <td>@load.Id</td>
                                        </tr>
                                        </thead>
                                        
                                        <tbody>
                                        <tr>
                                            <th scope="row" style="width: 150px">LoadType</th>
                                            @switch (load.LoadType)
                                            {
                                                case LoadType.DropOff:
                                                    <td>LoadType.DropOff</td>
                                                    break;
                                                case LoadType.PickUp:
                                                    <td>LoadType.PickUp</td>
                                                    break;
                                                default:
                                                    <td>Invalid!</td>
                                                    break;
                                            }
                                        </tr>

                                        <tr>
                                            <th scope="row" style="width: 150px">Pellets</th>
                                            <td>@(string.Join(", ", load.Pellets.Select(x => x.Id)))</td>
                                        </tr>

                                        </tbody>
                                    </table>
                                }
                            }
                        </div>
                    }
                    @if (_selectedBay != null)
                    {
                    <div class="d-flex flex-column flex-fill">
                        <h1>Bay #@_selectedBay.Id</h1>

                        <table class="table">
                            <tbody>

                            <tr>
                                <th scope="row" style="width: 150px">Capacity</th>
                                <td>@_selectedBay.Capacity</td>
                            </tr>

                            <tr>
                                <th scope="row" style="width: 150px">BayStatus</th>
                                @switch (_selectedBay.BayStatus)
                                {
                                    case BayStatus.Closed:
                                        <td>BayStatus.Closed</td>
                                        break;
                                    case BayStatus.Opened:
                                        <td>BayStatus.Opened</td>
                                        break;
                                    default:
                                        <td>Invalid!</td>
                                        break;
                                }
                            </tr>

                            <tr>
                                <th rowspan="3" scope="row" style="width: 150px">BayFlags</th>
                                @{
                                    var droppedOff = _selectedBay.BayFlags.HasFlag(BayFlags.DroppedOff) ? "text-success" : "text-danger";
                                    var fetched = _selectedBay.BayFlags.HasFlag(BayFlags.Fetched) ? "text-success" : "text-danger";
                                    var pickedUp = _selectedBay.BayFlags.HasFlag(BayFlags.PickedUp) ? "text-success" : "text-danger";
                                }
                                <td class="@droppedOff">BayFlags.DroppedOff</td>
                            </tr>
                            
                            <tr>
                                <td class="@fetched">BayFlags.Fetched</td>
                            </tr>

                            <tr>
                                <td class="@pickedUp">BayFlags.PickedUp</td>
                            </tr>

                            <tr>
                                <th scope="row" style="width: 150px">Inventory</th>
                                <td>@(string.Join(", ", _selectedBay.Inventory.Select(x => x.Id)))</td>
                            </tr>

                            </tbody>
                        </table>
                    </div>
                    }
                </div>
            </div>
        }

        <div class="d-flex flex-column flex-fill" id="container" style="width: 0"></div>
    </div>
</div>
